#N canvas 686 74 575 645 12;
#X declare -path ./abstractions;
#X obj 99 457 *~;
#X obj 99 324 mtof;
#X obj 260 266 != 0;
#X msg 242 370 0;
#X floatatom 275 397 5 0 0 0 - - - 0;
#X obj 99 377 line~;
#X obj 102 557 output~;
#X obj 99 510 rev2~ 90 80 3000 20;
#X floatatom 99 293 5 0 0 0 - - - 0;
#X obj 260 291 t f f;
#X obj 242 321 ==;
#X obj 242 343 select 0 1;
#X obj 275 370 f;
#X floatatom 333 379 5 0 1000 0 - - - 0;
#X obj 333 332 loadbang;
#X msg 333 355 25;
#X text 379 372 portamento time in ms, f 10;
#X floatatom 229 436 5 0 0 0 - - - 0;
#X obj 99 171 keyboard 17 80 2 2 1 0 empty empty;
#X obj 99 138 notein;
#X obj 99 421 tabosc4~ \$0-wave;
#N canvas 119 101 448 222 waveform 0;
#X obj 60 47 loadbang;
#X obj 174 133 array define \$0-wave;
#X obj 60 132 s \$0-wave;
#X msg 60 74 sinesum 4096 1 0.5 0.333333 0.25 0.2 0.166667 0.142857 0.125 0.111111 0.1 0.090909 0.0833333 0.076923 0.0714286 0.0666667 0.0625 \, normalize, f 46;
#X connect 0 0 3 0;
#X connect 3 0 2 0;
#X restore 288 510 pd waveform;
#X text 66 36 This example implements a monophonic synthesizer that relies on the [monophonic] abstraction. We also implement a portamento with the [line~] object \, where for every new attack there's no portamento \, but for other subsequent played notes you have a portamento time., f 63;
#X obj 229 466 envadsr~ 200 50 0.75 250;
#X obj 306 119 declare -path ./abstractions;
#X obj 99 267 monophonic, f 19;
#X connect 0 0 7 0;
#X connect 1 0 5 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 5 1;
#X connect 5 0 20 0;
#X connect 7 0 6 0;
#X connect 7 1 6 0;
#X connect 7 2 6 1;
#X connect 7 3 6 1;
#X connect 8 0 1 0;
#X connect 9 0 10 1;
#X connect 9 1 10 0;
#X connect 10 0 11 0;
#X connect 11 0 3 0;
#X connect 11 1 12 0;
#X connect 12 0 4 0;
#X connect 13 0 12 1;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 17 0 23 0;
#X connect 18 0 25 0;
#X connect 19 0 18 0;
#X connect 19 1 18 1;
#X connect 20 0 0 0;
#X connect 23 0 0 1;
#X connect 25 0 8 0;
#X connect 25 1 17 0;
#X connect 25 1 2 0;
